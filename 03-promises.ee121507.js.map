{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,mBAEtC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAIPN,EAAKc,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAGC,iBAEHb,EAAOc,UAAW,EAElB,IAAIC,EAAQC,OAAOJ,EAAGK,cAAcC,SAASf,MAAMgB,OAC7CC,EAAOJ,OAAOJ,EAAGK,cAAcC,SAASE,KAAKD,OAC7CE,EAASL,OAAOJ,EAAGK,cAAcC,SAASG,OAAOF,OAEvDT,YAAW,WACTV,EAAOc,UAAW,IACjBO,EAASD,EAAOL,GAEnB,IAAK,IAAIO,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUP,GACrBQ,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBR,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,UAE9DyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBR,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,UAE9DY,GAASK,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst btnRef = document.querySelector('[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(ev) {\n  ev.preventDefault();\n\n  btnRef.disabled = true;\n\n  let delay = Number(ev.currentTarget.elements.delay.value);\n  const step = Number(ev.currentTarget.elements.step.value);\n  const amount = Number(ev.currentTarget.elements.amount.value);\n\n  setTimeout(() => {\n    btnRef.disabled = false;\n  }, amount * step + delay);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$btnRef","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","ev","preventDefault","disabled","delay1","Number","currentTarget","elements","value","step","amount","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ee121507.js.map"}